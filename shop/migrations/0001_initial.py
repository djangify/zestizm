# Generated by Django 5.2.7 on 2025-10-21 16:44

import django.core.files.storage
import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('paid', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_intent_id', models.CharField(blank=True, max_length=250)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='GuestDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guest_details', to='shop.order')),
            ],
            options={
                'verbose_name_plural': 'Guest Details',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.CharField(blank=True, db_index=True, max_length=130, null=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', tinymce.models.HTMLField()),
                ('section_description', models.TextField(blank=True, null=True)),
                ('long_description', tinymce.models.HTMLField(blank=True, null=True)),
                ('product_type', models.CharField(choices=[('download', 'Digital Download'), ('coaching', 'Coaching Hours')], default='download', max_length=20)),
                ('number_of_pages', models.PositiveIntegerField(blank=True, help_text='Number of pages for digital downloads', null=True)),
                ('status', models.CharField(choices=[('publish', 'Published'), ('soon', 'Coming Soon'), ('full', 'Fully Booked'), ('draft', 'Draft')], default='draft', max_length=10)),
                ('external_image_url', models.URLField(blank=True, help_text='External URL for product image (jpg/png only)', max_length=500, null=True)),
                ('external_preview_url', models.URLField(blank=True, help_text='External URL for preview file (PDF only)', max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('price_pence', models.PositiveIntegerField(help_text='Price in pence')),
                ('sale_price_pence', models.PositiveIntegerField(blank=True, help_text='Sale price in pence', null=True)),
                ('price_per_hour', models.PositiveIntegerField(blank=True, help_text='Coaching price per hour in pence', null=True)),
                ('files', models.FileField(blank=True, help_text='Upload a PDF or ZIP file. Use ZIP for bundles.', null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/secure/', location='C:\\Dev\\Projects\\zestizm\\media\\secure'), upload_to='products/files/')),
                ('preview_file', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/public/', location='C:\\Dev\\Projects\\zestizm\\media\\public'), upload_to='products/previews/')),
                ('preview_image', models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/public/', location='C:\\Dev\\Projects\\zestizm\\media\\public'), upload_to='products/images/')),
                ('video_url', models.URLField(blank=True, help_text='Optional YouTube or Vimeo URL to display on the product page', null=True)),
                ('video_file', models.FileField(blank=True, help_text='Upload a short MP4 file to display as product video', null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/public/', location='C:\\Dev\\Projects\\zestizm\\media\\public'), upload_to='products/videos/')),
                ('download_limit', models.PositiveIntegerField(default=5)),
                ('featured', models.BooleanField(default=False)),
                ('purchase_count', models.PositiveIntegerField(default=0)),
                ('order', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.category')),
            ],
            options={
                'ordering': ['order', '-created'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_paid_pence', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('downloads_remaining', models.PositiveIntegerField(default=5)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shop.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.product')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('verified_purchase', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
                'unique_together': {('product', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchased_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'product')},
            },
        ),
    ]
